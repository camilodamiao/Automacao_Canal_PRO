# pages/3_‚öôÔ∏è_Configura√ß√µes.py
"""
P√°gina de configura√ß√µes do sistema
"""

import streamlit as st
import os
from dotenv import load_dotenv

st.set_page_config(page_title="Configura√ß√µes", layout="wide")

st.title("‚öôÔ∏è Configura√ß√µes")

# Tabs de configura√ß√£o
tab1, tab2, tab3, tab4 = st.tabs([
    "üîê Credenciais", 
    "ü§ñ Automa√ß√£o", 
    "üìù Templates",
    "üîß Sistema"
])

with tab1:
    st.header("Credenciais e Conex√µes")
    
    # Credenciais Canal PRO
    st.subheader("Canal PRO")
    
    col1, col2 = st.columns(2)
    
    with col1:
        zap_email = st.text_input(
            "Email",
            value=os.getenv("ZAP_EMAIL", ""),
            type="default",
            help="Email usado para login no Canal PRO"
        )
    
    with col2:
        zap_password = st.text_input(
            "Senha",
            value="*" * len(os.getenv("ZAP_PASSWORD", "")) if os.getenv("ZAP_PASSWORD") else "",
            type="password",
            help="Senha do Canal PRO"
        )
    
    # Supabase
    st.subheader("Supabase")
    
    col1, col2 = st.columns(2)
    
    with col1:
        supa_url = st.text_input(
            "URL",
            value=os.getenv("SUPABASE_URL", ""),
            help="URL do projeto Supabase"
        )
    
    with col2:
        supa_key = st.text_input(
            "Anon Key",
            value=os.getenv("SUPABASE_KEY", "")[:20] + "..." if os.getenv("SUPABASE_KEY") else "",
            type="password",
            help="Chave an√¥nima do Supabase"
        )
    
    if st.button("üíæ Salvar Credenciais"):
        # TODO: Implementar salvamento seguro
        st.success("Credenciais salvas com sucesso!")

with tab2:
    st.header("Configura√ß√µes de Automa√ß√£o")
    
    # Comportamento padr√£o
    st.subheader("Comportamento Padr√£o")
    
    col1, col2 = st.columns(2)
    
    with col1:
        auto_destacar = st.checkbox(
            "Destacar an√∫ncios automaticamente",
            value=False,
            help="Usar c√≥digos destac√°veis quando dispon√≠veis"
        )
        
        min_fotos = st.number_input(
            "M√≠nimo de fotos",
            min_value=1,
            max_value=10,
            value=3,
            help="N√∫mero m√≠nimo de fotos para publicar"
        )
        
        modo_endereco = st.selectbox(
            "Modo de exibi√ß√£o do endere√ßo",
            ["Completo", "Somente Rua", "Somente Bairro"],
            help="Como o endere√ßo ser√° exibido no an√∫ncio"
        )
    
    with col2:
        auto_otimizar = st.checkbox(
            "Otimizar t√≠tulo automaticamente",
            value=True,
            help="Gerar t√≠tulo otimizado baseado nos dados"
        )
        
        max_caracteres_titulo = st.number_input(
            "M√°ximo de caracteres no t√≠tulo",
            min_value=50,
            max_value=100,
            value=100
        )
        
        tipo_operacao = st.selectbox(
            "Tipo de opera√ß√£o padr√£o",
            ["Venda", "Aluguel", "Venda e Aluguel"]
        )
    
    # Mapeamentos customizados
    st.subheader("Mapeamentos Customizados")
    
    with st.expander("üè† Tipos de Im√≥vel"):
        st.info("Configure como os tipos s√£o mapeados entre GINTERVALE e Canal PRO")
        
        # Exemplo de configura√ß√£o
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.text_input("GINTERVALE", value="Casa", disabled=True)
        with col2:
            st.text("‚Üí")
        with col3:
            st.selectbox("Canal PRO", ["HOME", "APARTMENT", "CONDOMINIUM"])

with tab3:
    st.header("Templates de Descri√ß√£o")
    
    st.info("Configure templates para gerar descri√ß√µes automaticamente")
    
    # Seletor de tipo
    tipo_template = st.selectbox(
        "Tipo de Im√≥vel",
        ["Apartamento", "Casa", "Terreno", "Comercial"]
    )
    
    # Template editor
    template_default = """üè† {titulo}

üìç Localiza√ß√£o: {localizacao}

‚ú® Caracter√≠sticas:
- {quartos} quartos
- {banheiros} banheiros  
- {vagas} vagas
- {area}m¬≤

üìù Descri√ß√£o:
{descricao}

üí∞ Valores:
- Condom√≠nio: R$ {condominio}
- IPTU: R$ {iptu}

üìû Entre em contato para mais informa√ß√µes!
C√≥digo: {codigo}"""
    
    template = st.text_area(
        "Template de Descri√ß√£o",
        value=template_default,
        height=400,
        help="Use {campo} para inserir valores dinamicamente"
    )
    
    # Preview
    with st.expander("üëÅÔ∏è Preview"):
        st.text("Exemplo de como ficar√°:")
        preview = template.format(
            titulo="Apartamento 3 quartos em Jardim Aquarius",
            localizacao="Jardim Aquarius - S√£o Jos√© dos Campos/SP",
            quartos=3,
            banheiros=2,
            vagas=2,
            area=125,
            descricao="Lindo apartamento com vista para o jardim...",
            condominio="385,00",
            iptu="150,00",
            codigo="AP10657"
        )
        st.text(preview)
    
    if st.button("üíæ Salvar Template"):
        st.success("Template salvo com sucesso!")

with tab4:
    st.header("Configura√ß√µes do Sistema")
    
    # Informa√ß√µes do sistema
    st.subheader("Informa√ß√µes")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.metric("Vers√£o do Sistema", "1.0.0")
        st.metric("Python", "3.11.0")
        st.metric("Streamlit", st.__version__)
    
    with col2:
        st.metric("Im√≥veis no Banco", "42")
        st.metric("Publica√ß√µes Totais", "128")
        st.metric("√öltima Atualiza√ß√£o", "15/01/2024")
    
    # Manuten√ß√£o
    st.subheader("Manuten√ß√£o")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üóëÔ∏è Limpar Cache", use_container_width=True):
            st.cache_data.clear()
            st.success("Cache limpo!")
    
    with col2:
        if st.button("üîÑ Recarregar Dados", use_container_width=True):
            st.rerun()
    
    with col3:
        if st.button("üì• Backup Dados", use_container_width=True):
            st.info("Funcionalidade em desenvolvimento")
    
    # Logs
    st.subheader("Logs do Sistema")
    
    log_level = st.selectbox(
        "N√≠vel de Log",
        ["DEBUG", "INFO", "WARNING", "ERROR"]
    )
    
    # Exemplo de logs
    log_example = """[2024-01-15 14:30:15] INFO: Sistema iniciado
[2024-01-15 14:30:20] INFO: Conex√£o com Supabase estabelecida
[2024-01-15 14:31:05] INFO: Im√≥vel AP10657 publicado com sucesso
[2024-01-15 14:31:06] INFO: Nota do an√∫ncio: 8.5
[2024-01-15 14:35:22] WARNING: Tentativa de publicar sem CEP
[2024-01-15 14:35:30] INFO: Dados corrigidos, publica√ß√£o retomada"""
    
    st.text_area(
        "Logs Recentes",
        value=log_example,
        height=200,
        disabled=True
    )